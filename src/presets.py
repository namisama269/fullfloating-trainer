import json

facelets = {
    3: [
        [ # D
            [(125,306), (180,306), (175,350), (114,350)],
            [(189,306), (242,306), (246,350), (186,350)],
            [(254,306), (310,306), (320,350), (259,350)],
            [(133,256), (183,256), (178,298), (122,298)],
            [(191,256), (240,256), (242,298), (189,298)],
            [(250,256), (300,256), (312,298), (255,298)],
            [(140,210), (185,210), (180,248), (131,248)],
            [(194,210), (239,210), (242,248), (192,248)],
            [(248,210), (293,210), (302,248), (253,248)],
        ],
        [ # L
            [(98,103), (108,65), (120,110), (110,144)],
            [(86,147), (96,110), (112,163), (101,199)],
            [(70,208), (84,157), (99,210), (84,261)],
            [(113,170), (122,137), (131,167), (121,198)],
            [(102,209), (112,181), (120,211), (111,240)],
            [(86,270), (100,217), (111,258), (97,309)],
            [(123,212), (130,186), (137,209), (129,234)],
            [(113,258), (122,223), (130,250), (121,284)],
            [(99,317), (112,272), (122,303), (108,350)],               
        ],
        [ # R
            [(336,208), (350,157), (365,210), (351,262)],
            [(323,154), (336,107), (347,147), (335,192)],
            [(314,102), (324,65), (333,100), (323,136)],
            [(324,264), (335,222), (348,268), (336,308)],
            [(315,212), (323,178), (334,214), (324,245)],
            [(313,130), (321,158), (312,191), (303,161)],
            [(314,311), (324,277), (334,314), (325,350)],
            [(305,258), (314,227), (323,258), (314,289)],
            [(297,211), (304,185), (311,210), (304,235)],
        ],
        [ # B
            [(258,64), (319,64), (308,109), (253,109)],
            [(186,64), (248,64), (244,109), (189,109)],
            [(112,64), (173,64), (178,109), (123,109)],
            [(254,119), (310,119), (300,159), (249,159)],
            [(189,119), (244,119), (242,159), (191,159)],
            [(121,119), (177,119), (182,159), (131,159)],
            [(252,169), (304,169), (296,205), (247,205)],
            [(192,169), (240,169), (238,205), (194,205)],
            [(130,169), (182,169), (186,205), (138,205)],
        ],
        [ # F
            [(80,215), (162,215), (167,263), (93,263)],
            [(178,215), (256,215), (252,263), (182,263)],
            [(272,215), (353,215), (341,263), (267,263)],
            [(95,274), (165,274), (170,314), (104,314)],
            [(182,274), (248,274), (245,314), (185,314)],
            [(266,274), (338,274), (327,314), (262,314)],
            [(106,326), (171,326), (174,359), (115,359)],
            [(186,326), (248,326), (245,359), (188,359)],
            [(261,326), (325,326), (316,359), (257,359)],
        ], # U
        [ 
            [(114,58), (174,58), (170,92), (106,92)],
            [(188,58), (245,58), (248,92), (186,92)],
            [(258,58), (317,58), (326,92), (262,92)],
            [(104,102), (169,102), (166,142), (92,142)],
            [(186,102), (245,102), (248,142), (184,142)],
            [(263,102), (328,102), (338,142), (268,142)],
            [(92,153), (165,153), (162,201), (80,201)],
            [(182,153), (252,153), (256,201), (179,201)],
            [(268,153), (341,153), (354,201), (273,201)],
        ],
    ],
    4: [
        [ # D
            [(123,391), (180,391), (178,439), (120,439)],
            [(189,391), (246,391), (247,439), (190,439)],
            [(257,391), (314,391), (315,439), (257,439)],
            [(323,391), (380,391), (384,439), (327,439)],
            [(130,339), (182,339), (180,383), (125,383)],
            [(193,339), (247,339), (247,383), (191,383)],
            [(256,339), (310,339), (314,383), (257,383)],
            [(321,339), (373,339), (382,383), (325,383)],
            [(135,292), (187,292), (184,331), (131,331)],
            [(195,292), (247,292), (248,331), (192,331)],
            [(255,292), (307,292), (310,331), (256,331)],
            [(315,292), (368,292), (372,331), (320,331)],
            [(141,249), (189,249), (195,285), (135,285)],
            [(199,249), (247,249), (247,285), (195,285)],
            [(256,249), (305,249), (308,285), (256,285)],
            [(314,249), (363,249), (364,285), (310,285)],
        ],
        [ # L
            [(112,55), (118,104), (111,137), (104,92)],
            [(103,98), (111,146), (103,186), (94,137)],
            [(94,145), (102,191), (94,239), (85,189)],
            [(83,198), (92,244), (83,297), (72,247)],
            [(119,110), (124,163), (119,191), (112,147)],
            [(111,155), (118,202), (114,219), (102,211)],
            [(100,220), (111,246), (106,274), (95,249)],
            [(94,254), (102,297), (94,351), (85,308)],
            [(127,161), (131,211), (128,225), (119,205)],
            [(118,210), (125,246), (119,288), (113,248)],
            [(111,259), (119,295), (112,336), (105,300)],
            [(103,306), (111,343), (103,397), (95,359)],
            [(131,219), (137,245), (133,276), (127,246)],
            [(122,281), (133,284), (126,328), (120,292)],
            [(119,304), (126,338), (122,366), (119,362), (114,338)],
            [(113,351), (121,378), (112,436), (105,401)],
        ],
        [ # R
            [(431,245), (421,298), (412,248), (421,196)],
            [(411,144), (420,187), (410,240), (403,194)],
            [(402,96), (409,136), (401,184), (394,146)],
            [(393,53), (401,91), (393,140), (386,104)],
            [(411,256), (419,306), (411,350), (402,294)],
            [(402,212), (409,246), (400,284), (394,247)],
            [(393,157), (400,200), (389,220), (385,194)],
            [(385,113), (393,156), (385,192), (379,159)],
            [(402,319), (409,356), (401,396), (395,354)],
            [(396,275), (400,299), (392,333), (386,295)],
            [(386,217), (391,248), (384,277), (378,236)],
            [(378,161), (386,207), (377,226), (373,201)],
            [(400,400), (392,438), (384,384), (392,358)],#
            [(385,304), (392,344), (384,379), (378,331)],
            [(379,260), (385,296), (377,325), (372,289)],
            [(374,219), (377,247), (371,272), (367,249)],
        ],
        [ # B
            [(328,50), (387,50), (381,101), (324,101)],
            [(257,50), (318,50), (314,101), (257,101)],
            [(186,50), (246,50), (247,101), (189,101)],
            [(115,50), (176,50), (181,101), (122,101)],
            [(324,109), (379,109), (375,153), (319,153)],
            [(256,109), (314,109), (310,153), (256,153)],
            [(190,109), (247,109), (247,153), (194,153)],
            [(123,109), (182,109), (186,153), (130,153)],
            [(319,160), (374,160), (369,200), (317,200)],
            [(256,160), (312,160), (308,200), (256,200)],
            [(191,160), (247,160), (248,200), (196,200)],
            [(130,160), (184,160), (187,200), (136,200)],
            [(313,207), (372,207), (362,244), (314,244)],
            [(256,207), (312,207), (305,244), (256,244)],
            [(192,207), (247,207), (248,244), (199,244)],
            [(136,207), (189,207), (191,244), (142,244)],      
        ],
        [ # F
            [(79,252), (156,252), (161,302), (90,302)],
            [(169,252), (245,252), (246,302), (174,302)],
            [(259,252), (335,252), (330,302), (259,302)],
            [(350,252), (425,252), (414,302), (343,302)],
            [(90,310), (162,310), (167,355), (100,355)],
            [(175,310), (246,310), (247,355), (179,355)],
            [(259,310), (329,310), (326,355), (259,355)],
            [(343,310), (413,310), (404,355), (338,355)],
            [(101,362), (168,362), (172,400), (110,400)],
            [(179,362), (245,362), (246,400), (183,400)],
            [(258,362), (324,362), (320,400), (258,400)],
            [(337,362), (403,362), (395,400), (333,400)],
            [(110,408), (172,408), (176,442), (118,442)],
            [(184,408), (246,408), (246,442), (188,442)],
            [(258,408), (321,408), (318,442), (258,442)],
            [(333,408), (394,408), (387,442), (328,442)],
        ],
        [ # U
            [(115,50), (176,50), (172,84), (108,84)],
            [(186,50), (247,50), (246,84), (183,84)],
            [(257,50), (318,50), (321,84), (258,84)],
            [(329,50), (389,50), (394,84), (332,84)],
            [(108,92), (172,92), (167,130), (100,130)],
            [(183,92), (246,92), (244,130), (179,130)],
            [(258,92), (321,92), (325,130), (258,130)],
            [(333,92), (396,92), (404,130), (338,130)],
            [(99,139), (167,139), (161,183), (90,183)],
            [(179,139), (245,139), (245,183), (175,183)],
            [(259,139), (325,139), (330,183), (259,183)],
            [(338,139), (405,139), (415,183), (343,183)],
            [(89,191), (161,191), (154,242), (79,242)],
            [(174,191), (244,191), (243,242), (169,242)],
            [(259,191), (331,191), (335,242), (260,242)],
            [(343,191), (415,191), (426,242), (349,242)],
        ],
    ],
}

# Initial location of all stickers in each cube size
init_faces = {
    3: {
        'U': [[['UBL', None], ['UB', None], ['UBR', None]],
              [['UL', None], ['U', None], ['UR', None]],
              [['UFL', None], ['UF', None], ['UFR', None]]],
        'L': [[['LUB', None], ['LU', None], ['LUF', None]],
              [['LB', None], ['L', None], ['LF', None]],
              [['LDB', None], ['LD', None], ['LDF', None]]],
        'F': [[['FUL', None], ['FU', None], ['FUR', None]],
              [['FL', None], ['F', None], ['FR', None]],
              [['FDL', None], ['FD', None], ['FDR', None]]],
        'R': [[['RUF', None], ['RU', None], ['RUB', None]],
              [['RF', None], ['R', None], ['RB', None]],
              [['RDF', None], ['RD', None], ['RDB', None]]],
        'B': [[['BUR', None], ['BU', None], ['BUL', None]],
              [['BR', None], ['B', None], ['BL', None]],
              [['BDR', None], ['BD', None], ['BDL', None]]],
        'D': [[['DFL', None], ['DF', None], ['DFR', None]],
              [['DL', None], ['D', None], ['DR', None]],
              [['DBL', None], ['DB', None], ['DBR', None]]],
    }, 
}

def save_init_faces():
    """
    Save the initial face locations to JSON for initialising/resetting the cube.
    """
    with open(f"config/initface333.json", 'w') as f:
        json.dump(init_faces[3], f)

def init_config():
    save_init_faces()
